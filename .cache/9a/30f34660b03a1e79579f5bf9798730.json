{"id":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","dependencies":[{"name":"D:\\documents\\personal_works\\myWorks\\works\\package.json","includedInParent":true,"mtime":1552889784328},{"name":"D:\\documents\\personal_works\\myWorks\\works\\node_modules\\parcel-bundler\\node_modules\\ws\\package.json","includedInParent":true,"mtime":1552888990330},{"name":"bufferutil","optional":true,"loc":{"line":56,"column":29},"parent":"D:\\documents\\personal_works\\myWorks\\works\\node_modules\\parcel-bundler\\node_modules\\ws\\lib\\buffer-util.js"},{"name":"buffer","parent":"D:\\documents\\personal_works\\myWorks\\works\\node_modules\\parcel-bundler\\node_modules\\ws\\lib\\buffer-util.js","resolved":"C:\\Users\\Administrator\\AppData\\Local\\Yarn\\Data\\global\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict';\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat (list, totalLength) {\n  const target = Buffer.allocUnsafe(totalLength);\n  var offset = 0;\n\n  for (var i = 0; i < list.length; i++) {\n    const buf = list[i];\n    buf.copy(target, offset);\n    offset += buf.length;\n  }\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask (source, mask, output, offset, length) {\n  for (var i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask (buffer, mask) {\n  // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n  const length = buffer.length;\n  for (var i = 0; i < length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\ntry {\n  const bufferUtil = require('bufferutil');\n  const bu = bufferUtil.BufferUtil || bufferUtil;\n\n  module.exports = {\n    mask (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bu.mask(source, mask, output, offset, length);\n    },\n    unmask (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bu.unmask(buffer, mask);\n    },\n    concat\n  };\n} catch (e) /* istanbul ignore next */ {\n  module.exports = { concat, mask: _mask, unmask: _unmask };\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}}],"sources":{"node_modules/parcel-bundler/node_modules/ws/lib/buffer-util.js":"'use strict';\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat (list, totalLength) {\n  const target = Buffer.allocUnsafe(totalLength);\n  var offset = 0;\n\n  for (var i = 0; i < list.length; i++) {\n    const buf = list[i];\n    buf.copy(target, offset);\n    offset += buf.length;\n  }\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask (source, mask, output, offset, length) {\n  for (var i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask (buffer, mask) {\n  // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n  const length = buffer.length;\n  for (var i = 0; i < length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\ntry {\n  const bufferUtil = require('bufferutil');\n  const bu = bufferUtil.BufferUtil || bufferUtil;\n\n  module.exports = {\n    mask (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bu.mask(source, mask, output, offset, length);\n    },\n    unmask (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bu.unmask(buffer, mask);\n    },\n    concat\n  };\n} catch (e) /* istanbul ignore next */ {\n  module.exports = { concat, mask: _mask, unmask: _unmask };\n}\n"},"lineCount":74}},"error":null,"hash":"b5897d6d168a12ecc65f4170ce5dfe7c","cacheData":{"env":{}}}