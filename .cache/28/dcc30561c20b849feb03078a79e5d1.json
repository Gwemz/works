{"id":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","dependencies":[{"name":"D:\\documents\\personal_works\\myWorks\\works\\package.json","includedInParent":true,"mtime":1552889784328},{"name":"D:\\documents\\personal_works\\myWorks\\works\\node_modules\\parcel-bundler\\node_modules\\@iarna\\toml\\package.json","includedInParent":true,"mtime":1552888978205},{"name":"stream","loc":{"line":4,"column":23},"parent":"D:\\documents\\personal_works\\myWorks\\works\\node_modules\\parcel-bundler\\node_modules\\@iarna\\toml\\parse-stream.js","resolved":"C:\\Users\\Administrator\\AppData\\Local\\Yarn\\Data\\global\\node_modules\\stream-browserify\\index.js"},{"name":"./lib/toml-parser.js","loc":{"line":5,"column":27},"parent":"D:\\documents\\personal_works\\myWorks\\works\\node_modules\\parcel-bundler\\node_modules\\@iarna\\toml\\parse-stream.js","resolved":"D:\\documents\\personal_works\\myWorks\\works\\node_modules\\parcel-bundler\\node_modules\\@iarna\\toml\\lib\\toml-parser.js"}],"generated":{"js":"'use strict'\nmodule.exports = parseStream\n\nconst stream = require('stream')\nconst TOMLParser = require('./lib/toml-parser.js')\n\nfunction parseStream (stm) {\n  if (stm) {\n    return parseReadable(stm)\n  } else {\n    return parseTransform(stm)\n  }\n}\n\nfunction parseReadable (stm) {\n  const parser = new TOMLParser()\n  stm.setEncoding('utf8')\n  return new Promise((resolve, reject) => {\n    let readable\n    let ended = false\n    let errored = false\n    function finish () {\n      ended = true\n      if (readable) return\n      try {\n        resolve(parser.finish())\n      } catch (err) {\n        reject(err)\n      }\n    }\n    function error (err) {\n      errored = true\n      reject(err)\n    }\n    stm.once('end', finish)\n    stm.once('error', error)\n    readNext()\n\n    function readNext () {\n      readable = true\n      let data\n      while ((data = stm.read()) !== null) {\n        try {\n          parser.parse(data)\n        } catch (err) {\n          return error(err)\n        }\n      }\n      readable = false\n      /* istanbul ignore if */\n      if (ended) return finish()\n      /* istanbul ignore if */\n      if (errored) return\n      stm.once('readable', readNext)\n    }\n  })\n}\n\nfunction parseTransform () {\n  const parser = new TOMLParser()\n  return new stream.Transform({\n    objectMode: true,\n    transform (chunk, encoding, cb) {\n      try {\n        parser.parse(chunk.toString(encoding))\n      } catch (err) {\n        this.emit('error', err)\n      }\n      cb()\n    },\n    flush (cb) {\n      try {\n        this.push(parser.finish())\n      } catch (err) {\n        this.emit('error', err)\n      }\n      cb()\n    }\n  })\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}}],"sources":{"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-stream.js":"'use strict'\nmodule.exports = parseStream\n\nconst stream = require('stream')\nconst TOMLParser = require('./lib/toml-parser.js')\n\nfunction parseStream (stm) {\n  if (stm) {\n    return parseReadable(stm)\n  } else {\n    return parseTransform(stm)\n  }\n}\n\nfunction parseReadable (stm) {\n  const parser = new TOMLParser()\n  stm.setEncoding('utf8')\n  return new Promise((resolve, reject) => {\n    let readable\n    let ended = false\n    let errored = false\n    function finish () {\n      ended = true\n      if (readable) return\n      try {\n        resolve(parser.finish())\n      } catch (err) {\n        reject(err)\n      }\n    }\n    function error (err) {\n      errored = true\n      reject(err)\n    }\n    stm.once('end', finish)\n    stm.once('error', error)\n    readNext()\n\n    function readNext () {\n      readable = true\n      let data\n      while ((data = stm.read()) !== null) {\n        try {\n          parser.parse(data)\n        } catch (err) {\n          return error(err)\n        }\n      }\n      readable = false\n      /* istanbul ignore if */\n      if (ended) return finish()\n      /* istanbul ignore if */\n      if (errored) return\n      stm.once('readable', readNext)\n    }\n  })\n}\n\nfunction parseTransform () {\n  const parser = new TOMLParser()\n  return new stream.Transform({\n    objectMode: true,\n    transform (chunk, encoding, cb) {\n      try {\n        parser.parse(chunk.toString(encoding))\n      } catch (err) {\n        this.emit('error', err)\n      }\n      cb()\n    },\n    flush (cb) {\n      try {\n        this.push(parser.finish())\n      } catch (err) {\n        this.emit('error', err)\n      }\n      cb()\n    }\n  })\n}\n"},"lineCount":81}},"error":null,"hash":"a027592eab4c35c7703b03630437f7bb","cacheData":{"env":{}}}