{"id":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","dependencies":[{"name":"D:\\documents\\personal_works\\myWorks\\works\\package.json","includedInParent":true,"mtime":1552889784328},{"name":"D:\\documents\\personal_works\\myWorks\\works\\node_modules\\parcel-bundler\\node_modules\\@iarna\\toml\\package.json","includedInParent":true,"mtime":1552888978205},{"name":"./lib/toml-parser.js","loc":{"line":4,"column":27},"parent":"D:\\documents\\personal_works\\myWorks\\works\\node_modules\\parcel-bundler\\node_modules\\@iarna\\toml\\parse-async.js","resolved":"D:\\documents\\personal_works\\myWorks\\works\\node_modules\\parcel-bundler\\node_modules\\@iarna\\toml\\lib\\toml-parser.js"},{"name":"./parse-pretty-error.js","loc":{"line":5,"column":28},"parent":"D:\\documents\\personal_works\\myWorks\\works\\node_modules\\parcel-bundler\\node_modules\\@iarna\\toml\\parse-async.js","resolved":"D:\\documents\\personal_works\\myWorks\\works\\node_modules\\parcel-bundler\\node_modules\\@iarna\\toml\\parse-pretty-error.js"}],"generated":{"js":"'use strict'\nmodule.exports = parseAsync\n\nconst TOMLParser = require('./lib/toml-parser.js')\nconst prettyError = require('./parse-pretty-error.js')\n\nfunction parseAsync (str, opts) {\n  if (!opts) opts = {}\n  const index = 0\n  const blocksize = opts.blocksize || 40960\n  const parser = new TOMLParser()\n  return new Promise((resolve, reject) => {\n    setImmediate(parseAsyncNext, index, blocksize, resolve, reject)\n  })\n  function parseAsyncNext (index, blocksize, resolve, reject) {\n    if (index >= str.length) {\n      try {\n        return resolve(parser.finish())\n      } catch (err) {\n        return reject(prettyError(err, str))\n      }\n    }\n    try {\n      parser.parse(str.slice(index, index + blocksize))\n      setImmediate(parseAsyncNext, index + blocksize, blocksize, resolve, reject)\n    } catch (err) {\n      reject(prettyError(err, str))\n    }\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}}],"sources":{"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-async.js":"'use strict'\nmodule.exports = parseAsync\n\nconst TOMLParser = require('./lib/toml-parser.js')\nconst prettyError = require('./parse-pretty-error.js')\n\nfunction parseAsync (str, opts) {\n  if (!opts) opts = {}\n  const index = 0\n  const blocksize = opts.blocksize || 40960\n  const parser = new TOMLParser()\n  return new Promise((resolve, reject) => {\n    setImmediate(parseAsyncNext, index, blocksize, resolve, reject)\n  })\n  function parseAsyncNext (index, blocksize, resolve, reject) {\n    if (index >= str.length) {\n      try {\n        return resolve(parser.finish())\n      } catch (err) {\n        return reject(prettyError(err, str))\n      }\n    }\n    try {\n      parser.parse(str.slice(index, index + blocksize))\n      setImmediate(parseAsyncNext, index + blocksize, blocksize, resolve, reject)\n    } catch (err) {\n      reject(prettyError(err, str))\n    }\n  }\n}\n"},"lineCount":31}},"error":null,"hash":"2ef1da731d2748d0956be60a31f1a3d1","cacheData":{"env":{}}}