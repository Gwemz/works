{"id":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","dependencies":[{"name":"D:\\documents\\personal_works\\myWorks\\works\\package.json","includedInParent":true,"mtime":1552889784328},{"name":"D:\\documents\\personal_works\\myWorks\\works\\node_modules\\parcel-bundler\\node_modules\\@iarna\\toml\\package.json","includedInParent":true,"mtime":1552888978205}],"generated":{"js":"'use strict'\nmodule.exports = prettyError\n\nfunction prettyError (err, buf) {\n  /* istanbul ignore if */\n  if (err.pos == null || err.line == null) return err\n  let msg = err.message\n  msg += ` at row ${err.line + 1}, col ${err.col + 1}, pos ${err.pos}:\\n`\n\n  /* istanbul ignore else */\n  if (buf && buf.split) {\n    const lines = buf.split(/\\n/)\n    const lineNumWidth = String(Math.min(lines.length, err.line + 3)).length\n    let linePadding = ' '\n    while (linePadding.length < lineNumWidth) linePadding += ' '\n    for (let ii = Math.max(0, err.line - 1); ii < Math.min(lines.length, err.line + 2); ++ii) {\n      let lineNum = String(ii + 1)\n      if (lineNum.length < lineNumWidth) lineNum = ' ' + lineNum\n      if (err.line === ii) {\n        msg += lineNum + '> ' + lines[ii] + '\\n'\n        msg += linePadding + '  '\n        for (let hh = 0; hh < err.col; ++hh) {\n          msg += ' '\n        }\n        msg += '^\\n'\n      } else {\n        msg += lineNum + ': ' + lines[ii] + '\\n'\n      }\n    }\n  }\n  err.message = msg + '\\n'\n  return err\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}}],"sources":{"node_modules/parcel-bundler/node_modules/@iarna/toml/parse-pretty-error.js":"'use strict'\nmodule.exports = prettyError\n\nfunction prettyError (err, buf) {\n  /* istanbul ignore if */\n  if (err.pos == null || err.line == null) return err\n  let msg = err.message\n  msg += ` at row ${err.line + 1}, col ${err.col + 1}, pos ${err.pos}:\\n`\n\n  /* istanbul ignore else */\n  if (buf && buf.split) {\n    const lines = buf.split(/\\n/)\n    const lineNumWidth = String(Math.min(lines.length, err.line + 3)).length\n    let linePadding = ' '\n    while (linePadding.length < lineNumWidth) linePadding += ' '\n    for (let ii = Math.max(0, err.line - 1); ii < Math.min(lines.length, err.line + 2); ++ii) {\n      let lineNum = String(ii + 1)\n      if (lineNum.length < lineNumWidth) lineNum = ' ' + lineNum\n      if (err.line === ii) {\n        msg += lineNum + '> ' + lines[ii] + '\\n'\n        msg += linePadding + '  '\n        for (let hh = 0; hh < err.col; ++hh) {\n          msg += ' '\n        }\n        msg += '^\\n'\n      } else {\n        msg += lineNum + ': ' + lines[ii] + '\\n'\n      }\n    }\n  }\n  err.message = msg + '\\n'\n  return err\n}\n"},"lineCount":34}},"error":null,"hash":"439a55d471d09b2171f85d753b880b0e","cacheData":{"env":{}}}